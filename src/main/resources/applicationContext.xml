<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

<!-- <import resource="history1.xml"></import>-->
    <!--<bean name="book2" class="com.qfedu.domain.Book"  init-method="init" destroy-method="_2">
        <property name="id" value="100"/>

    </bean>-->
    <context:component-scan base-package="com"/>

    <bean name="enhancer" class="org.springframework.cglib.proxy.Enhancer"></bean>

    <aop:aspectj-autoproxy ></aop:aspectj-autoproxy>
  <!-- <aop:config>
        <aop:pointcut id="1" expression=" execution( * com.qfedu.service.SendEmainService.*(..))"></aop:pointcut>
        <aop:aspect ref="logServiceImp">
            <aop:before method="_1" pointcut-ref="1"></aop:before>
            <aop:after method="_2" pointcut-ref="1"></aop:after>
            <aop:around method="_3" pointcut-ref="1" ></aop:around>
            <aop:after-throwing method="_4" pointcut-ref="1"/>
        </aop:aspect>
    </aop:config>
-->

    <bean name="dataUtil" class="com.qfedu.util.DatasourceUtil"></bean>

    <!--配置数据库连接池-->
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"  factory-bean="dataUtil" factory-method="getDataSource"/>
    <!--配置jdbctemplate-->
    <bean name="template" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>

    </bean>

    <tx:annotation-driven transaction-manager="manager" ></tx:annotation-driven>

    <!--配置事务管理器-->
    <bean name="manager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>

    </bean>
<!--

    &lt;!&ndash;事务通知配置&ndash;&gt;
    <tx:advice id="transactionInterceptor" transaction-manager="manager">
        <tx:attributes>
            <tx:method name="tran*" propagation="REQUIRED"/>
        </tx:attributes>

    </tx:advice>

    &lt;!&ndash;事务通知&ndash;&gt;
   <aop:config>
        <aop:pointcut id="transactionPointCut" expression="execution(* com.qfedu.service.*.*(..))"></aop:pointcut>
        <aop:advisor advice-ref="transactionInterceptor" pointcut-ref="transactionPointCut"></aop:advisor>
    </aop:config>
-->

    <!--配置sqlsessionfactoryBean-->
    <bean name="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="mybatisConfig.xml"></property>
    </bean>

   <!-- <bean name="factoryBean" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.qfedu.dao.ADao"></property>

    </bean>-->

    <!--配置mapperScanConfigRer-->
    <bean name="mapperFactory" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.qfedu"></property>

    </bean>
   <bean name="r1" class="com.qfedu.domain.Room" scope="prototype">
<!--
     <property name="hashMap" ref="hashMap"></property>
-->

    </bean>

    <bean class="java.util.HashMap" name="hashMap"></bean>
</beans>